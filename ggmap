1. 세계지도 또는 아시아지도를 그리기

######코드#######

install.packages("maps")

install.packages("ggplot2")

library(maps)

library(ggplot2)

# 우선 maps와ggplot2 패키지를 설치한다

asia <- map_data("world", region = c("China","Japan","North Korea","South Korea", "India"))

# 원하는 나라를 map_data를 통하여 불러온다

ggplot(asia, aes(x=long, y=lat, group=group, fill=region)) + geom_polygon(colour="black") + scale_fill_brewer(palette="Set1")

# geom_polygon을 이용하여 나라들의 테두리를 그리고 색깔로 채운다



# Pantos Internal Control SAP Slip Integration Approval Analysis (ggmap Chart)

# installing/loading the package:
if(!require(installr)) {
  install.packages("installr"); require(installr)} #load / install+load installr

# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.

install.packages("ggmap")
library(ggmap)
devtools::install_github("dkahle/ggmap")
library(httr)
set_config(use_proxy(url="10.3.100.207",port=8080))

install.packages("curl")
library(curl)

install.packages("vctrs")
library(vctrs)
remove.packages("vctrs")

install.packages('devtools')
library('devtools')

register_google(key = 'AIzaSyBrUcwMtAX3mNqpvd5F4P48AM0FtFN0eXY')

seoul_map <- get_map("seoul", zoom=11, maptype="hybrid")
ggmap(seoul_map)

gc <- geocode("seoul")
center <- as.numeric(gc)
map <- get_googlemap(center=center,language="ko-KR", color="bw", zoom=15)
ggmap(map, extent="panel", maptype="terrain") # device, normal, panel
maptype <- c("terrain", "satellite", "roadmap", " hybrid")

df <- round(data.frame(x=jitter(rep(-95.36,5), amount=.3),
                       y=jitter(rep(29.76, 5), amount=.3)),
            digits=2)
df

map <- get_googlemap("houston", marker=df, path=df)
ggmap(map)

##################### ggmap 세계 공항이용객 현황

library(rvest)
library(ggplot2)
library(ggmap)
install.packages("maps")
library(maps)

html.airports <-  read_html( "https://en.wikipedia.org/wiki/List_of_busiest_airports_by_passenger_traffic")
df  <-  html_table(html_nodes(html.airports, "table")[[1]], fill = TRUE)
head(df)
str(df)

# Data Preprocessing
# rename: two lined-word=>one word
colnames(df)[5]="Code"
colnames(df)[6]="TotalPassenger"
colnames(df)[7]="RankChange"
colnames(df)[8]="Change%"
# Type conversion
df$TotalPassenger=gsub(',','',df$TotalPassenger)
df$TotalPassenger=as.numeric(df$TotalPassenger)
head(df)
View(df)

# Visualize the TotalPassenger over the world map
gc <- geocode(df$Airport) #get longitude and lattitude data for each of the airport
df <- cbind(df, gc) #combine (long,lati) data into the data frame for visualization)
head(df)
world <- map_data("world")
ggplot(df, aes(x=lon, y=lat)) +
  geom_polygon(data=world, aes(x=long, y=lat, group=group), fill="grey75", color="grey70") +
  geom_point(color="dark red", alpha=.25, aes(size=TotalPassenger)) +
  geom_point(color="dark red", alpha=.75, shape=1, aes(size=TotalPassenger)) +
  theme(legend.position='none')


